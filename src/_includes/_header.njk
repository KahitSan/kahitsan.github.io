<!-- Header Component using Navigation Data -->
<header class="fixed top-0 w-full bg-dark-secondary py-4 z-50">
    <nav class="container mx-auto flex justify-between items-center px-8">
        <!-- Logo -->
        <a href="/" class="flex items-center">
            {% image "images/logo.png", "99px", { class: "h-10 w-auto", alt: "KahitSan"} %}
        </a>
        
        <!-- Desktop Navigation -->
        <ul class="hidden md:flex space-x-8">
            {% for item in navigation.main %}
                {% if item.hasDropdown %}
                    <!-- Dropdown Menu -->
                    <li class="dropdown relative">
                        <a href="{{ item.url }}" class=" nav-link text-gray-300 hover:text-gold-light transition-colors duration-300  px-3 py-2 rounded-md">
                            <span>{{ item.title }} </span>
                            <svg class="inline ml-1 h-4 w-4 text-gold-light group-hover:text-gold transition-colors duration-300" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 20 20" aria-hidden="true">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 8l4 4 4-4"/>
                            </svg>
                        </a>
                        <div class="dropdown-content hidden absolute bg-dark min-w-72 shadow-2xl shadow-black/50 rounded-xl p-3 top-full left-0 mt-2 backdrop-blur-sm">
                            {% for dropdownItem in item.dropdown %}
                                <a href="{{ dropdownItem.url }}" 
                                   class="block text-gray-300 hover:text-gold-light hover:bg-gold-light/20 py-3 px-4 rounded-lg transition-all duration-300 group"
                                   {% if dropdownItem.description %}title="{{ dropdownItem.description }}"{% endif %}>
                                    <div class="font-medium">{{ dropdownItem.title }}</div>
                                    {% if dropdownItem.description %}
                                        <div class="text-xs text-gray-400 group-hover:text-gold-light/80 mt-1">{{ dropdownItem.description }}</div>
                                    {% endif %}
                                </a>
                            {% endfor %}
                        </div>
                    </li>
                {% else %}
                    <!-- Simple Link -->
                    <li>
                        <a href="{{ item.url }}" class="nav-link text-gray-300 hover:text-gold-light transition-colors duration-300 font-medium px-3 py-2 rounded-md hover:bg-gold-light/15">
                            {{ item.title }}
                        </a>
                    </li>
                {% endif %}
            {% endfor %}
        </ul>
        
        <!-- Mobile Menu Button -->
        <div class="md:hidden">
            <button id="mobile-menu-button" class="text-white focus:outline-none p-2 rounded-md hover:bg-gold-light/20 hover:text-gold-light transition-all duration-300">
                <svg id="menu-icon" class="h-6 w-6 fill-current" viewBox="0 0 24 24">
                    <path fill-rule="evenodd" d="M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z" />
                </svg>
                <svg id="close-icon" class="h-6 w-6 fill-current hidden" viewBox="0 0 24 24">
                    <path fill-rule="evenodd" d="M18.364 5.636a1 1 0 0 1 0 1.414L13.414 12l4.95 4.95a1 1 0 1 1-1.414 1.414L12 13.414l-4.95 4.95a1 1 0 0 1-1.414-1.414L10.586 12 5.636 7.05a1 1 0 0 1 1.414-1.414L12 10.586l4.95-4.95a1 1 0 0 1 1.414 0z" />
                </svg>
            </button>
        </div>
        
        <div class="flex justify-center">
            {% for social in navigation.social %}
            <a href="{{ social.url }}" target="_blank"
               class="social-icon mx-2 bg-dark-secondary text-gold-light border-dark-secondary hover:bg-gold hover:text-white">
                <i class="{{ social.icon }}"></i>
            </a>
            {% endfor %}
        </div>
    </nav>

    <!-- Mobile Menu -->
    <div id="mobile-menu" class="md:hidden hidden bg-dark-secondary">
        <div class="px-4 pt-2 pb-4 space-y-2">
            {% for item in navigation.mobile %}
                <a href="{{ item.url }}" 
                   class="block px-4 py-3 text-gray-300 hover:text-gold-light hover:bg-gold-light/20 rounded-lg transition-all duration-300 font-medium" 
                   onclick="closeMobileMenu()">
                    {{ item.title }}
                </a>
            {% endfor %}
            
            <!-- Mobile Social Icons -->
            <div class="flex justify-center pt-4 space-x-4 mt-4">
                {% for social in navigation.social %}
                    <a href="{{ social.url }}" target="_blank" 
                       class="w-10 h-10 rounded-full bg-dark text-gold-light flex items-center justify-center hover:bg-gold hover:text-white transition-all duration-300">
                        <i class="{{ social.icon }}"></i>
                    </a>
                {% endfor %}
            </div>
        </div>
    </div>
</header>

<!-- Required CSS for dropdown functionality and improved styling -->
<style type="text/css">
    /* Dropdown hover functionality */
    .dropdown:hover .dropdown-content {
        display: block;
    }
    
    /* Enhanced dropdown animations */
    .dropdown-content {
        opacity: 0;
        transform: translateY(-10px);
        transition: opacity 0.3s ease, transform 0.3s ease;
        pointer-events: none;
    }
    
    .dropdown:hover .dropdown-content {
        opacity: 1;
        transform: translateY(0);
        pointer-events: auto;
    }
    
    /* Active navigation link styling */
    .nav-link.active {
        background-color: rgba(179, 135, 40, 0.25);
        color: #b38728;
    }
    
    /* Better focus states for accessibility */
    .nav-link:focus,
    button:focus {
        outline: 2px solid #b38728;
        outline-offset: 2px;
    }
</style>

{# Hover effect to color the link #}
<script>
document.addEventListener("DOMContentLoaded", () => {
    // Select all links with the hover:text-gold-light class
    const links = document.querySelectorAll("a.hover\\:text-gold-light");

    links.forEach(link => {
        // Add mouseover event to replace text-gray-300 with text-gold-light
        link.addEventListener("mouseover", () => {
            link.classList.remove("text-gray-300");
            link.classList.add("text-gold-light");
        });

        // Add mouseout event to revert back to text-gray-300
        link.addEventListener("mouseout", () => {
            link.classList.remove("text-gold-light");
            link.classList.add("text-gray-300");
        });
    });
});
</script>

<!-- Required JavaScript for mobile menu -->
<script type="text/javascript">
    function toggleMobileMenu() {
        const mobileMenu = document.getElementById('mobile-menu');
        const menuIcon = document.getElementById('menu-icon');
        const closeIcon = document.getElementById('close-icon');
        
        if (mobileMenu.classList.contains('hidden')) {
            mobileMenu.classList.remove('hidden');
            menuIcon.classList.add('hidden');
            closeIcon.classList.remove('hidden');
        } else {
            mobileMenu.classList.add('hidden');
            menuIcon.classList.remove('hidden');
            closeIcon.classList.add('hidden');
        }
    }

    function closeMobileMenu() {
        const mobileMenu = document.getElementById('mobile-menu');
        const menuIcon = document.getElementById('menu-icon');
        const closeIcon = document.getElementById('close-icon');
        
        mobileMenu.classList.add('hidden');
        menuIcon.classList.remove('hidden');
        closeIcon.classList.add('hidden');
    }

    // Add event listener for mobile menu button
    document.addEventListener('DOMContentLoaded', function() {
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        if (mobileMenuButton) {
            mobileMenuButton.addEventListener('click', toggleMobileMenu);
        }
        
        // Highlight current page in navigation
        const currentPath = window.location.pathname;
        const navLinks = document.querySelectorAll('.nav-link');
        
        navLinks.forEach(link => {
            if (link.getAttribute('href') === currentPath) {
                link.classList.add('active');
            }
        });
    });
</script>